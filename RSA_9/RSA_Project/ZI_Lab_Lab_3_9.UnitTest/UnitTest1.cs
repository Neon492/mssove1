using System;
using System.Collections.Generic;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using RSA_Project;

namespace ZI_Lab_Lab_3_9.UnitTest
{
    [TestClass]
    public class UnitTest1
    {
        private const int Len = 49; //Длина ключа

        private readonly RsaCrypt _crypt = new RsaCrypt(Len);
        // Класс шифровальщика с открытым ключом

        private readonly string[] _texts =
        {
            "Так в 1923 году В. И. Ленин озаглавил свою замечательную статью о мерах, которые необходимо было принять для укрепления и улучшения советского государственного аппарата. Слова эти оказались столь многозначительными и вескими, были так удачно найдены, что скоро из простого заглавия превратились в настоящее крылатое слово со значением: качество может быть важнее количества.",
            "В огромных старорусских семьях было принято, чтобы их члены чередовались понедельно на домашних работах: эту неделю Федор колет дрова, Иван таскает воду, следующую - наоборот. Так же поочередно мололи муку на домашнем жернове: очень нелегкая работа. Болтунам же, отлынивавшим от всякого труда, говорили с насмешкой: \"Мели, Емеля, твоя неделя!\" - играя на том, что выражение \"языком молоть\" комически сопоставлялось тут именно с представлением о самой тяжелой работе на жернове.",
            "Выражение это, так сказать, царского происхождения. Автором его был царь Иван IV, прозванный в народе Грозным за массовые казни и убийства. Для усиления своей самодержавной власти, что невозможно было без ослабления князей, бояр и духовенства, Иван Грозный ввел опричнину, наводившую ужас на все государство Российское.Не мог примириться с разгулом опричников и митрополит Московский Филипп.",
            "Что это за выражение? При чем тут решето? Оказывается, это сокращение старинной русской поговорки, которая гласила: \"чудеса в решете - дыр много, а выскочить некуда\". До нас дошла только первая часть фразы, которая как бы вобрала в себя смысл всего высказывания.",
            "В греческой и римской мифологии Цербер - чудовищный трехглавый пес со змеиным хвостом, охранявший вход в подземное царство Аида, который был укрощен Гераклом. Отсюда слово \"цербер\" употребляется в значении: злой, свирепый надсмотрщик.",
            "Когда великий титан Прометей похитил с Олимпа и передал людям огонь богов, отец богов Зевс страшно покарал смельчака, но было поздно. Обладая божественным пламенем, люди перестали подчиняться небожителям, научились разным наукам, вышли из своего жалкого состояния. Еще немного - и они завоевали бы себе полное счастье...",
            "По древнегреческому мифу, Юпитеру (греч. Зевс) приглянулась дочь финикийского царя Европа. Юпитер превратился в быка и похитил ее. Quod licet Jovi, non licet bovi - пословица говорит о нескромной или безосновательной претензии."
        };

        private string ConvertStringToHex(string asciiString)
        {
            string hex = "";
            foreach (char c in asciiString)
            {
                int tmp = c;
                hex += String.Format("{0:x2}", Convert.ToUInt32(tmp.ToString()));
            }
            return hex;
        }

        [TestMethod]
        public void TestMethod1()
        {
            for (int i = 0; i < _texts.Length; i++)
            {
                string text = _texts[i];
                Console.WriteLine(@"Тест #:               " + i);
                _crypt.GenerateKeys(Len);
                Console.WriteLine(@"N:  {0}", _crypt.Module);
                Console.WriteLine(@"Открытый ключ:  {0}", _crypt.PubKey);
                Console.WriteLine(@"Закрытый ключ:  {0}", _crypt.PriKey);
                Console.WriteLine(@"Исходный текст:       " + text);
                List<byte[]> partition =
                    _crypt.EncryptMessage(TextManager.PartitionOfString(text, _crypt.ModuleLength - 1));
                string cipher = TextManager.PartitionToString(partition);
                Console.WriteLine(@"Шифрованный текст:    " + ConvertStringToHex(cipher));
                string plain = TextManager.PartitionToString(_crypt.DecryptMessage(partition));
                Console.WriteLine(@"Расшифрованный текст: " + plain);
                //Assert.IsTrue(String.CompareOrdinal(text.Trim(), cipher.Trim()) != 0);
                //Assert.IsTrue(String.CompareOrdinal(text.Trim(), plain.Trim()) == 0);
                Console.WriteLine();
            }
        }
    }
}